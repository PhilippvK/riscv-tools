name: RISC-V GNU Toolchain Builds

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  parse-metadata:
    runs-on: ubuntu-latest
    outputs:
      releases: ${{ steps.parse.outputs.releases }}
    steps:
      - uses: actions/checkout@v4
      - id: parse
        run: |
          releases=$(jq -c '.releases' .github/build_commands.json)
          echo "releases=$releases" >> $GITHUB_OUTPUT
  create-releases:
    needs: parse-metadata
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        release: ${{ fromJson(needs.parse-metadata.outputs.releases) }}
    steps:
      - uses: actions/checkout@v4
      - name: Ensure release exists
        run: |
          tag="${{ matrix.release.tag }}"
          title="${{ matrix.release.title }}"
          if ! gh release view "$tag" &>/dev/null; then
            echo "Creating release $tag"
            gh release create "$tag" --title "$title" --notes ""
          else
            echo "Release $tag already exists"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  expand-commands:
    needs: parse-metadata
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.expand.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: expand
        run: |
          releases='${{ needs.parse-metadata.outputs.releases }}'
          # build [{ "release": {...}, "command": "..."}, ...]
          matrix=$(echo "$releases" | jq -c '[.[] | {release: ., commands: .commands} | .commands[] as $c | {release: {tag: .release.tag, title: .release.title}, command: $c}]')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build:
    needs: [create-releases, expand-commands]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.expand-commands.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Run build command
        run: |
          echo "Executing: ${{ matrix.command }}"
          bash -c "${{ matrix.command }}"

      - name: Upload artifacts to release
        run: |
          gh release upload ${{ matrix.release.tag }} ${{ matrix.release.dest }}/*.tar.xz --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
